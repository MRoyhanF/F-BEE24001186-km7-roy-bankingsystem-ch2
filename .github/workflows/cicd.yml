# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: init depedencies
        run: npm install

      - name: running eslint
        run: npm run lint

      - name: running testing
        run: npm run test:watch

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Google Cloud Auth
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: "google-github-actions/setup-gcloud@v2"

      - name: Create app.yaml with Secrets
        run: |
          echo "runtime: nodejs" > app.yaml
          echo "env: flex" >> app.yaml
          echo "runtime_config:" >> app.yaml
          echo "  operating_system: 'ubuntu22'" >> app.yaml
          echo "  runtime_version: '20'" >> app.yaml
          echo "automatic_scaling:" >> app.yaml
          echo "  min_num_instances: 1" >> app.yaml
          echo "  max_num_instances: 2" >> app.yaml
          echo "beta_settings:" >> app.yaml
          echo "env_variables:" >> app.yaml
          echo "  DATABASE_URL: '${{ secrets.DATABASE_URL }}'" >> app.yaml
          echo "  IMAGEKIT_PRIVATE_KEY: '${{ secrets.IMAGEKIT_PRIVATE_KEY }}'" >> app.yaml
          echo "  IMAGEKIT_API_KEY: '${{ secrets.IMAGEKIT_API_KEY }}'" >> app.yaml
          echo "  IMAGEKIT_URL_ENDPOINT: '${{ secrets.IMAGEKIT_URL_ENDPOINT }}'" >> app.yaml
          echo "  JWT_SECRET: '${{ secrets.JWT_SECRET }}'" >> app.yaml
          echo "  SENTRY_DSN: '${{ secrets.SENTRY_DSN }}'" >> app.yaml
          echo "  EMAIL_USER: '${{ secrets.EMAIL_USER }}'" >> app.yaml
          echo "  EMAIL_PASSWORD: '${{ secrets.EMAIL_PASSWORD }}'" >> app.yaml
          echo "  DOMAIN: '${{ secrets.DOMAIN }}'" >> app.yaml

      - name: Deploy to Google App Engine
        run: |
          gcloud app deploy app.yaml --quiet
